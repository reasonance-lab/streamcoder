import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Generate fictitious healthcare data
np.random.seed(42)
dates = pd.date_range(start='2023-01-01', end='2023-12-31', freq='D')
patients = np.random.randint(50, 200, size=len(dates))
heart_rate = np.random.normal(75, 10, size=len(dates))
blood_pressure_systolic = np.random.normal(120, 10, size=len(dates))
blood_pressure_diastolic = np.random.normal(80, 5, size=len(dates))

# Create DataFrame
df = pd.DataFrame({
    'Date': dates,
    'Patients': patients,
    'Heart Rate': heart_rate,
    'BP Systolic': blood_pressure_systolic,
    'BP Diastolic': blood_pressure_diastolic
})

# Streamlit app
st.set_page_config(layout="wide")
st.title('Healthcare Dashboard')

# Sidebar
st.sidebar.header('Filters')
date_range = st.sidebar.date_input('Select Date Range', [df['Date'].min(), df['Date'].max()])

# Filter data based on date range
mask = (df['Date'] >= pd.to_datetime(date_range[0])) & (df['Date'] <= pd.to_datetime(date_range[1]))
filtered_df = df.loc[mask]

# Display raw data
st.subheader('Raw Data')
st.dataframe(filtered_df)

# Basic statistics
st.subheader('Basic Statistics')
st.write(filtered_df.describe())

# Data visualization
st.subheader('Data Visualization')

col1, col2 = st.columns(2)

with col1:
    # Patient trend
    fig, ax = plt.subplots(figsize=(10, 6))
    ax.plot(filtered_df['Date'], filtered_df['Patients'], marker='o')
    ax.set_title('Daily Patient Count')
    ax.set_xlabel('Date')
    ax.set_ylabel('Number of Patients')
    plt.xticks(rotation=45)
    st.pyplot(fig)

with col2:
    # Heart Rate distribution
    fig, ax = plt.subplots(figsize=(10, 6))
    ax.hist(filtered_df['Heart Rate'], bins=20, edgecolor='black')
    ax.set_title('Heart Rate Distribution')
    ax.set_xlabel('Heart Rate (bpm)')
    ax.set_ylabel('Frequency')
    st.pyplot(fig)

col3, col4 = st.columns(2)

with col3:
    # Blood Pressure scatter plot
    fig, ax = plt.subplots(figsize=(10, 6))
    scatter = ax.scatter(filtered_df['BP Systolic'], filtered_df['BP Diastolic'], 
                         c=filtered_df['Heart Rate'], cmap='viridis', alpha=0.6)
    ax.set_title('Blood Pressure (Systolic vs Diastolic)')
    ax.set_xlabel('Systolic Pressure (mmHg)')
    ax.set_ylabel('Diastolic Pressure (mmHg)')
    plt.colorbar(scatter, label='Heart Rate (bpm)')
    st.pyplot(fig)

with col4:
    # Weekday average patients
    filtered_df['Weekday'] = filtered_df['Date'].dt.day_name()
    weekday_patients = filtered_df.groupby('Weekday')['Patients'].mean().reindex(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'])

    fig, ax = plt.subplots(figsize=(10, 6))
    ax.bar(weekday_patients.index, weekday_patients.values)
    ax.set_title('Average Patients by Weekday')
    ax.set_xlabel('Weekday')
    ax.set_ylabel('Average Number of Patients')
    plt.xticks(rotation=45)
    st.pyplot(fig)

# Key Metrics
st.subheader('Key Metrics')
col5, col6, col7 = st.columns(3)
col5.metric("Average Patients per Day", f"{filtered_df['Patients'].mean():.2f}")
col6.metric("Average Heart Rate", f"{filtered_df['Heart Rate'].mean():.2f} bpm")
col7.metric("Average Blood Pressure", f"{filtered_df['BP Systolic'].mean():.2f}/{filtered_df['BP Diastolic'].mean():.2f} mmHg")