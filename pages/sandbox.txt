import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from datetime import datetime, timedelta
import plotly.graph_objects as go
from plotly.subplots import make_subplots

# Generate fictitious stock prices
start_date = datetime(2023, 1, 1)
dates = [start_date + timedelta(days=i) for i in range(90)]

np.random.seed(42)
microsoft_prices = np.random.normal(loc=250, scale=10, size=90).cumsum() + 250
apple_prices = np.random.normal(loc=150, scale=5, size=90).cumsum() + 150

# Create DataFrame
df = pd.DataFrame({
    'Date': dates,
    'Microsoft': microsoft_prices,
    'Apple': apple_prices
})

# Plot 1: Line plot using Matplotlib
plt.figure(figsize=(12, 6))
plt.plot(df['Date'], df['Microsoft'], label='Microsoft')
plt.plot(df['Date'], df['Apple'], label='Apple')
plt.title('Stock Prices: Microsoft vs Apple')
plt.xlabel('Date')
plt.ylabel('Price')
plt.legend()
plt.show()

# Plot 2: Candlestick chart using Plotly
fig = make_subplots(rows=1, cols=2, shared_xaxes=True, subplot_titles=('Microsoft', 'Apple'))

for i, company in enumerate(['Microsoft', 'Apple'], 1):
    fig.add_trace(go.Candlestick(
        x=df['Date'],
        open=df[company],
        high=df[company] + np.random.uniform(0, 5, 90),
        low=df[company] - np.random.uniform(0, 5, 90),
        close=df[company],
        name=company
    ), row=1, col=i)

fig.update_layout(title_text='Stock Prices: Candlestick Chart', height=600)
fig.show()

# Plot 3: Area chart using Plotly
fig = go.Figure()
fig.add_trace(go.Scatter(x=df['Date'], y=df['Microsoft'], fill='tozeroy', name='Microsoft'))
fig.add_trace(go.Scatter(x=df['Date'], y=df['Apple'], fill='tozeroy', name='Apple'))
fig.update_layout(title='Stock Prices: Area Chart', xaxis_title='Date', yaxis_title='Price')
fig.show()