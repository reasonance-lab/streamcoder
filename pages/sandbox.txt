import streamlit as st
import requests
from bs4 import BeautifulSoup

def get_drug_info(drug_name):
    base_url = "https://api.fda.gov/drug/label.json"
    params = {
        "search": f"openfda.brand_name:{drug_name}",
        "limit": 1
    }
    
    response = requests.get(base_url, params=params)
    
    if response.status_code == 200:
        data = response.json()
        if data["results"]:
            return data["results"][0]
    return None

def parse_html(html_content):
    soup = BeautifulSoup(html_content, 'html.parser')
    return soup.get_text()

st.set_page_config(page_title="Drug Information Lookup", page_icon="💊", layout="wide")

st.title("💊 Drug Information Lookup")

drug_name = st.text_input("Enter a drug name:", placeholder="e.g., Aspirin")

if drug_name:
    with st.spinner(f"Searching for information on {drug_name}..."):
        drug_info = get_drug_info(drug_name)
    
    if drug_info:
        st.success(f"Information found for {drug_name}")
        
        col1, col2 = st.columns(2)
        
        with col1:
            if "indications_and_usage" in drug_info:
                st.subheader("📋 Indications and Usage")
                st.info(parse_html(drug_info["indications_and_usage"][0]))
            
            if "dosage_and_administration" in drug_info:
                st.subheader("💊 Dosage and Administration")
                st.info(parse_html(drug_info["dosage_and_administration"][0]))
        
        with col2:
            if "warnings" in drug_info:
                st.subheader("⚠️ Warnings")
                st.warning(parse_html(drug_info["warnings"][0]))
            
            if "adverse_reactions" in drug_info:
                st.subheader("🚫 Adverse Reactions")
                st.error(parse_html(drug_info["adverse_reactions"][0]))
        
        if "drug_interactions" in drug_info:
            st.subheader("🔄 Drug Interactions")
            st.info(parse_html(drug_info["drug_interactions"][0]))
        
        if "pregnancy" in drug_info:
            st.subheader("🤰 Pregnancy")
            st.info(parse_html(drug_info["pregnancy"][0]))
    else:
        st.error(f"No information found for {drug_name}")

st.markdown("---")
st.caption("Data source: FDA API | This app is for informational purposes only. Always consult with a healthcare professional.")